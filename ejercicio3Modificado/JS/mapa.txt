var mapa;

require(["esri/map",
    "esri/layers/ArcGISDynamicMapServiceLayer",
    "esri/tasks/QueryTask",
    "esri/tasks/query",
    "esri/geometry/Circle",
    "esri/symbols/SimpleFillSymbol",
    "esri/symbols/SimpleLineSymbol",
    "esri/Color",
    "esri/layers/GraphicsLayer",
    "esri/graphic",
    "esri/symbols/SimpleMarkerSymbol",
    "dojo/domReady!"
  ],

  function(Map,
    ArcGISDynamicMapServiceLayer,
    QueryTask,
    Query,
    Circle,
    SimpleFillSymbol,
    SimpleLineSymbol,
    Color,
    GraphicsLayer,
    Graphic,
    SimpleMarkerSymbol) {
    mapa = new Map("mapDiv", {
      basemap: "gray",
      center: [-101, 41],
      zoom: 3,
      logo: false
    });

    var urlDinamic = "http://sampleserver6.arcgisonline.com/arcgis/rest/services/USA/MapServer"; //que acabe en MapServer
    var dinamicLayer = new ArcGISDynamicMapServiceLayer(urlDinamic, {
      id: "repositorio"
    });
    mapa.addLayer(dinamicLayer);

    var urlCiudades = "http://sampleserver6.arcgisonline.com/arcgis/rest/services/USA/MapServer/0";
    var queryTaskCiudad = new QueryTask(urlCiudades);


    var line = new SimpleLineSymbol();
    line.setWidth(1.5);
    line.setStyle(SimpleLineSymbol.STYLE_NULL);
    var simbologiaCirculo = new SimpleFillSymbol();
    simbologiaCirculo.setColor(new Color([85, 255, 0, 0.52]));
    simbologiaCirculo.setOutline(line);

    var simbologiaQueryCiudades = new SimpleMarkerSymbol();
    simbologiaQueryCiudades.setPath("M16,3.5c-4.142,0-7.5,3.358-7.5,7.5c0,4.143,7.5,18.121,7.5,18.121S23.5,15.143,23.5,11C23.5,6.858,20.143,3.5,16,3.5z M16,14.584c-1.979,0-3.584-1.604-3.584-3.584S14.021,7.416,16,7.416S19.584,9.021,19.584,11S17.979,14.584,16,14.584z");
    simbologiaQueryCiudades.setColor(new Color([36, 36, 36, 1]));
    simbologiaQueryCiudades.setStyle(SimpleMarkerSymbol.STYLE_PATH);
    simbologiaQueryCiudades.setSize(18);



    var queryCiudad = new Query();
    queryCiudad.returnGeometry = true;
    queryCiudad.outSpatialReference = mapa.spatialReference;
    queryCiudad.outFields = ["objectid", "areaname", "pop2000"];



    graphicLayer = new GraphicsLayer();
    mapa.addLayer(graphicLayer);

    function borrarTabla() {
      var tabla = document.getElementById("tbody");
      if (tabla.firstChild) {
        while (tabla.firstChild) {
          tabla.removeChild(tabla.firstChild);
        };
      };
    };



    mapa.on("click", miFuncionClick);

    function miFuncionClick(eventoClick) {
      borrarTabla();
      graphicLayer.clear();

      var puntoClick = eventoClick.mapPoint;
      var circulo = new Circle(puntoClick, {
        "geodesic": true,
        "radius": 600000
      });
      var graficoCirculo = new Graphic(circulo, simbologiaCirculo);
      graphicLayer.add(graficoCirculo);

      var ctexto = document.getElementById("valorPantalla");
      queryCiudad.where = "pop2000 >" + ctexto.value;
      queryCiudad.geometry = circulo;
      queryCiudad.spatialRelationship = Query.SPATIAL_REL_INTERSECTS;

      queryTaskCiudad.execute(queryCiudad, respuestaQuery, error);
    };



    function error() {
      alert("Se ha producido un error.Introduce la cantidad de poblaci√≥n ")
    };

    function respuestaQuery(featureSetCiudades) {

      var arrayCiudadesGraficos = featureSetCiudades.features;
      for (var i = 0; i < arrayCiudadesGraficos.length; i++) {
        arrayCiudadesGraficos[i].setSymbol(simbologiaQueryCiudades);
        graphicLayer.add(arrayCiudadesGraficos[i]);
        poblarTabla(arrayCiudadesGraficos[i]);

      };
    };

    function poblarTabla(grafico) {
      var tabla = document.getElementById("tbody");

      var atributos = grafico.attributes;
      var oid = atributos.objectid;
      var nombre = atributos.areaname;
      var poblacion = atributos.pop2000;

      var fila = document.createElement("tr");
      var filaData = [oid, nombre, poblacion];
      for (i in filaData) {
        var celda = document.createElement("td");
        var textoCelda = document.createTextNode(filaData[i]);
        celda.appendChild(textoCelda);
        fila.appendChild(celda);
      };
      tabla.appendChild(fila);
    };




  });